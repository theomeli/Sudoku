package sudoku_Final;


import java.io.FileNotFoundException;
import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.util.logging.Level;
import java.util.logging.Logger;




/**
 *
 * @author Totoros
 */
public class StartScreen extends javax.swing.JDialog {

    /**
     * Creates new form StartScreen
     * @param parent
     * @param modal
     */
    public StartScreen(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        image = new javax.swing.JLabel();
        wordoku = new javax.swing.JCheckBox();
        type = new javax.swing.JComboBox();
        login = new javax.swing.JButton();
        newGame = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("startScreen");

        image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sudoku_Final/sudoku--134.jpg"))); // NOI18N
        image.setText("jLabel1");

        wordoku.setText("Wordoku");

        type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sudoku", "Hypersudoku", "Duidoku" }));
        type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeActionPerformed(evt);
            }
        });

        login.setText("Login");

        newGame.setText("New Game");
        newGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newGameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(login)
                        .addComponent(wordoku))
                    .addComponent(newGame))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(wordoku)
                .addGap(18, 18, 18)
                .addComponent(login)
                .addGap(18, 18, 18)
                .addComponent(newGame)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(image)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_typeActionPerformed

    private void newGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGameActionPerformed
        // TODO add your handling code here:
        String typeOfGame = type.getModel().getSelectedItem().toString();
        Board board;
        
        
        TypeOfSymbols tp;
        if (wordoku.isSelected())
            tp = TypeOfSymbols.Letters;
        else
            tp = TypeOfSymbols.Numbers;
        
        SudokuLogic logic;
        switch (typeOfGame) {
            case ("Sudoku"):
                board = loadBoard(typeOfGame);
                logic = new SudokuLogic(board, tp);
                Sudoku game1 = null;
                try {
                    game1 = new Sudoku(new java.awt.Frame(), true, logic);
                } catch (NoSuchFieldException | IllegalArgumentException | IllegalAccessException | NoSuchMethodException | InvocationTargetException ex) {
                    Logger.getLogger(StartScreen.class.getName()).log(Level.SEVERE, null, ex);
                }
                int[][] labels = game1.getLabels();
                try {
                    if (tp == TypeOfSymbols.Letters) {
                        String[][] letters = lettersInLabels(labels);
                        game1.lettersInButtons();
                        game1.updateJLabels(letters, logic);
                    }
                    else {
                        game1.updateJLabels(labels, logic);
                    }
                } catch (IllegalArgumentException | IllegalAccessException ex) {
                    Logger.getLogger(StartScreen.class.getName()).log(Level.SEVERE, null, ex);
                }
                game1.setVisible(true);
                break;
            case("Hypersudoku"):
                HyperSudoku game2 = new HyperSudoku(new java.awt.Frame(), true);
                board = new Board(9);
                game2.setVisible(true);
                break;
            case("Duidoku"):
                Duidoku game3 = new Duidoku(new javax.swing.JFrame(), true);
                board = new Board(4);
                game3.setVisible(true);
                break;
            default:
                board = new Board(9);
        }

        this.setVisible(false);
    }//GEN-LAST:event_newGameActionPerformed

    public Board loadBoard(String typeOfGame) {
        try {
            StartGameUnlogged start = new StartGameUnlogged(typeOfGame);
            int[][] loadedBoard = start.loadGame();
            Board board = new Board(9);
            for (int i = 0; i < 9; i++)
                for (int j = 0; j < 9; j++) {
                    board.setCell(i, j, loadedBoard[i][j]);
                }
            return board;
        } catch (FileNotFoundException ex) {
            Logger.getLogger(StartScreen.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(StartScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }
    
    public String[][] lettersInLabels(int[][] labels) {
        int size = labels.length;
        String[][] letters = new String[size][size];
        for (int i = 0; i < size; i++)
            for (int j = 0; j < size; j++)
                letters[i][j] = numbToLetter(labels[i][j]);
        
        return letters;
    }
    
    /**
     *
     * @param number
     * @return
     */
    static public String numbToLetter(int number) {
        switch(number) {
            case 1:
                return "a";
            case 2:
                return "b";
            case 3:
                return "c";
            case 4:
                return "d";
            case 5:
                return "e";
            case 6:
                return "f";
            case 7:
                return "g";
            case 8:
                return "h";
            case 9:
                return "i";
            default:
                return "_";
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StartScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StartScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StartScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StartScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                StartScreen dialog = new StartScreen(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel image;
    private javax.swing.JButton login;
    private javax.swing.JButton newGame;
    private javax.swing.JComboBox type;
    private javax.swing.JCheckBox wordoku;
    // End of variables declaration//GEN-END:variables
}
